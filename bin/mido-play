#!/usr/bin/env python
"""                                                                            
Play MIDI file on output port.

Example:

    mido-play some_file.mid

Todo:

  - do proper argument parsing
  - add option for output port
  - add option for printing messages
"""
from __future__ import print_function, division
import sys
import mido
from mido.midifiles import MidiFile

with mido.open_output() as output:
    output.reset()
    try:
        print('Using output {!r}.'.format(output.name))
        print()
        for filename in sys.argv[1:]:
            with MidiFile(filename) as midi_file:
                print('Playing {}.'.format(midi_file.name))
                length = midi_file.length
                print('Song length: {} minutes, {} seconds.'.format(
                        int(length / 60),
                        int(length % 60)))
                print('Tracks:')
                for i, track in enumerate(midi_file.tracks):
                    print('  {:2d}: {!r}'.format(i, track.name.strip()))

                for message in midi_file.play(yield_meta_messages=True):
                    if isinstance(message, mido.Message):
                        # print(message)
                        output.send(message)
                    elif message.type == 'set_tempo':
                        bpm = 60 / (message.tempo / 1000000)
                        if int(bpm) == bpm:
                            bpm = int(bpm)
                        print('Tempo changed to {} BPM.'.format(bpm))
            print()
    except KeyboardInterrupt:
        pass
    finally:
        print()
        output.reset()
